--Ui library no forget
	local Library = loadstring(game:HttpGet("https://pastebin.com/raw/Q3FmcUcs"))()
	
	local Window = Library:CreateWindow("Jolt X", Vector2.new(430, 350), Enum.KeyCode.RightControl)
	--sumting tabs
	local AimingTab = Window:CreateTab("Aiming")
	
	local VisualsTab = Window:CreateTab("Visuals")
	
	local MiscTab = Window:CreateTab("Misc")
	
	local OthersTab = Window:CreateTab("Others")
	--Aiming Tab for niga
	local CamSection = AimingTab:CreateSector("Camera Lock", "left")
	
	local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local CamlockState = false
local Prediction = 0.17823
local Keybind = "c"
local AutoUnlockOnLowHealth = false

local Tool = Instance.new("Tool")
Tool.Name = "Jolt X"
Tool.RequiresHandle = false

local Locked = true

function FindNearestEnemy()
    local ClosestDistance, ClosestPlayer = math.huge, nil
    local CenterPosition = Vector2.new(
        game:GetService("GuiService"):GetScreenResolution().X / 2,
        game:GetService("GuiService"):GetScreenResolution().Y / 2
    )

    for _, Player in ipairs(game:GetService("Players"):GetPlayers()) do
        if Player ~= LocalPlayer then
            local Character = Player.Character
            if Character and Character:FindFirstChild("HumanoidRootPart") and Character.Humanoid.Health > 0 then
                local Position, IsVisibleOnViewport = 
                    game:GetService("Workspace").CurrentCamera:WorldToViewportPoint(Character.HumanoidRootPart.Position)

                if IsVisibleOnViewport then
                    local Distance = (CenterPosition - Vector2.new(Position.X, Position.Y)).Magnitude
                    if Distance < ClosestDistance then
                        ClosestPlayer = Character.HumanoidRootPart
                        ClosestDistance = Distance
                    end
                end
            end
        end
    end

    return ClosestPlayer
end

local enemy = nil

RunService.Heartbeat:Connect(function()
    if CamlockState then
        if enemy then
            local camera = workspace.CurrentCamera
            camera.CFrame = CFrame.new(camera.CFrame.p, enemy.Position + enemy.Velocity * Prediction)

            if AutoUnlockOnLowHealth then
                local humanoid = enemy.Parent:FindFirstChild("Humanoid")
                if humanoid and humanoid.Health <= 1 then
                    enemy = nil
                    CamlockState = false
                end
            end
        end
    end
end)

Tool.Activated:Connect(function()
    Locked = not Locked
    if Locked then
        enemy = FindNearestEnemy()
        CamlockState = true
    else
        enemy = nil
        CamlockState = false
    end
end)

CamSection:AddToggle("Camera Lock", false, function(isToggled)
    if isToggled then
        Tool.Parent = LocalPlayer.Backpack
    else
        Tool.Parent = nil
    end
end)

CamSection:AddTextbox("Prediction", tostring(Prediction), function(State)
    local newPrediction = tonumber(State)
    if newPrediction then
        Prediction = newPrediction
    end
end)

CamSection:AddTextbox("Keybind", Keybind, function(State)
    Keybind = State:lower()
end)

CamSection:AddToggle("Auto Unlock", false, function(isToggled)
    AutoUnlockOnLowHealth = isToggled
end)
--Visuals Tab
local BoxSection = VisualsTab:CreateSector("Box ESP", "left")

local settings = {
    defaultcolor = Color3.fromRGB(255, 255, 255),
    teamcheck = false,
    teamcolor = false
}

local runService = game:GetService("RunService")
local players = game:GetService("Players")

local localPlayer = players.LocalPlayer
local camera = workspace.CurrentCamera

local newVector2, newColor3, newDrawing = Vector2.new, Color3.new, Drawing.new
local tan, rad = math.tan, math.rad
local round = function(...) 
    local a = {}
    for i, v in next, table.pack(...) do 
        a[i] = math.round(v) 
    end 
    return unpack(a) 
end
local wtvp = function(...) 
    local a, b = camera.WorldToViewportPoint(camera, ...) 
    return newVector2(a.X, a.Y), b, a.Z 
end

local espCache = {}
local espEnabled = false

local function createEsp(player)
    local drawings = {}

    drawings.box = newDrawing("Square")
    drawings.box.Thickness = 1
    drawings.box.Filled = false
    drawings.box.Color = settings.defaultcolor
    drawings.box.Visible = false
    drawings.box.ZIndex = 2

    drawings.boxoutline = newDrawing("Square")
    drawings.boxoutline.Thickness = 3
    drawings.boxoutline.Filled = false
    drawings.boxoutline.Color = newColor3()
    drawings.boxoutline.Visible = false
    drawings.boxoutline.ZIndex = 1

    espCache[player] = drawings
end

local function removeEsp(player)
    if rawget(espCache, player) then
        for _, drawing in next, espCache[player] do
            drawing:Remove()
        end
        espCache[player] = nil
    end
end

local function updateEsp(player, esp)
    local character = player and player.Character
    if character then
        local cframe = character:GetModelCFrame()
        local position, visible, depth = wtvp(cframe.Position)
        esp.box.Visible = visible
        esp.boxoutline.Visible = visible

        if cframe and visible then
            local scaleFactor = 1 / (depth * tan(rad(camera.FieldOfView / 2)) * 2) * 1000
            local width, height = round(2.5 * scaleFactor, 4.5 * scaleFactor)
            local x, y = round(position.X, position.Y)

            esp.box.Size = newVector2(width, height)
            esp.box.Position = newVector2(round(x - width / 2, y - height / 2))
            esp.box.Color = settings.defaultcolor

            esp.boxoutline.Size = esp.box.Size
            esp.boxoutline.Position = esp.box.Position
        end
    else
        esp.box.Visible = false
        esp.boxoutline.Visible = false
    end
end

local function toggleEsp(state)
    espEnabled = state
    for _, drawings in next, espCache do
        if not espEnabled then
            drawings.box.Visible = false
            drawings.boxoutline.Visible = false
        end
    end
end

for _, player in next, players:GetPlayers() do
    if player ~= localPlayer then
        createEsp(player)
    end
end

players.PlayerAdded:Connect(function(player)
    createEsp(player)
end)

players.PlayerRemoving:Connect(function(player)
    removeEsp(player)
end)

runService:BindToRenderStep("esp", Enum.RenderPriority.Camera.Value, function()
    if espEnabled then
        for player, drawings in next, espCache do
            if settings.teamcheck and player.Team == localPlayer.Team then
                continue
            end

            if drawings and player ~= localPlayer then
                updateEsp(player, drawings)
            end
        end
    end
end)

BoxSection:AddToggle("Box ESP", false, function(state)
    toggleEsp(state)
end)

local NameSection = VisualsTab:CreateSector("Nametags", "right")

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local nametagsEnabled = false

local function createNametag(player)
    local character = player.Character or player.CharacterAdded:Wait()
    local head = character:WaitForChild("Head")

    local billboard = Instance.new("BillboardGui")
    billboard.Adornee = head
    billboard.Size = UDim2.new(0, 150, 0, 40)
    billboard.StudsOffset = Vector3.new(0, 2, 0)
    billboard.AlwaysOnTop = true

    local nameLabel = Instance.new("TextLabel")
    nameLabel.Parent = billboard
    nameLabel.Size = UDim2.new(1, 0, 1, 0)
    nameLabel.BackgroundTransparency = 1
    nameLabel.Text = player.Name
    nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    nameLabel.Font = Enum.Font.Ubuntu
    nameLabel.TextStrokeTransparency = 0
    nameLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
    nameLabel.TextScaled = false
    nameLabel.TextSize = 18

    billboard.Parent = head
end

local function removeNametag(player)
    local character = player.Character
    if character and character:FindFirstChild("Head") then
        local head = character.Head
        local billboard = head:FindFirstChildOfClass("BillboardGui")
        if billboard then
            billboard:Destroy()
        end
    end
end

local function onCharacterAdded(character, player)
    if player ~= LocalPlayer and nametagsEnabled then
        local head = character:WaitForChild("Head")
        removeNametag(player)
        createNametag(player)
    end
end

local function onPlayerAdded(player)
    player.CharacterAdded:Connect(function(character)
        onCharacterAdded(character, player)
    end)
    if player.Character and nametagsEnabled then
        onCharacterAdded(player.Character, player)
    end
end

local function onPlayerRemoving(player)
    removeNametag(player)
end

local function toggleNametags(state)
    nametagsEnabled = state
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            if state then
                onCharacterAdded(player.Character or player.CharacterAdded:Wait(), player)
            else
                removeNametag(player)
            end
        end
    end
end

NameSection:AddToggle("Nametags", false, function(first)
    toggleNametags(first)
end)

for _, player in pairs(Players:GetPlayers()) do
    onPlayerAdded(player)
end

Players.PlayerAdded:Connect(onPlayerAdded)
Players.PlayerRemoving:Connect(onPlayerRemoving)
--Misc tab
local SpeedSection = MiscTab:CreateSector("Speed", "left")

local lp = game:GetService("Players").LocalPlayer
local desiredWalkSpeed = 100

local index
local newindex

index = hookmetamethod(game, "__index", function(self, property)
    if not checkcaller() and self:IsA("Humanoid") and self:IsDescendantOf(lp.Character) and property:lower() == "walkspeed" then
        return desiredWalkSpeed
    end
    return index(self, property)
end)

newindex = hookmetamethod(game, "__newindex", function(self, property, value)
    if not checkcaller() and self:IsA("Humanoid") and self:IsDescendantOf(lp.Character) and property:lower() == "walkspeed" then
        return
    end
    return newindex(self, property, value)
end)

local humanoid = lp.Character:FindFirstChildWhichIsA("Humanoid")
if humanoid then
    humanoid.WalkSpeed = desiredWalkSpeed
end

local toggleActive = false

SpeedSection:AddToggle("Super Speed", false, function(value)
    toggleActive = value
    if humanoid then
        humanoid.WalkSpeed = toggleActive and desiredWalkSpeed or 16
    end
end)

SpeedSection:AddTextbox("Speed", "100", true, function(text)
    local newSpeed = tonumber(text)
    if newSpeed and newSpeed > 0 then
        desiredWalkSpeed = newSpeed
        if toggleActive and humanoid then
            humanoid.WalkSpeed = desiredWalkSpeed
        end
    end
end)

local UIS = game:GetService("UserInputService")
local IPlayer = game:GetService("Players").LocalPlayer

getgenv().speedinput = 5
getgenv().speed = false

SpeedSection:AddToggle("CFrame Speed", false, function(Value)
    getgenv().speed = Value
end)

SpeedSection:AddTextbox("Speed", nil, function(Value)
    getgenv().speedinput = tonumber(Value) or 5
end)

spawn(function()
    while game:GetService("RunService").Heartbeat:Wait() do
        if IPlayer.Character and IPlayer.Character:FindFirstChild("HumanoidRootPart") and
           IPlayer.Character:FindFirstChild("Head") and
           IPlayer.Character:FindFirstChild("Humanoid").MoveDirection.Magnitude > 0 and
           getgenv().speed then
            IPlayer.Character:TranslateBy(IPlayer.Character:FindFirstChild("Humanoid").MoveDirection * getgenv().speedinput * 2)
        end
    end
end)

local AntiSection = MiscTab:CreateSector("Anti", "right")

getgenv().Sky = false
getgenv().SkyAmount = 825

local connection

local function startSkyEffect()
    connection = game:GetService("RunService").Heartbeat:Connect(function()
        if getgenv().Sky then 
            local vel = game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity
            game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, getgenv().SkyAmount, 0) 
            game:GetService("RunService").RenderStepped:Wait()
            game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = vel
        end 
    end)
end

local function stopSkyEffect()
    if connection then
        connection:Disconnect()
        connection = nil
    end
end

AntiSection:AddToggle("Anti-Lock", false, function(state)
    getgenv().Sky = state
    if state then
        startSkyEffect()
    else
        stopSkyEffect()
    end
end)

local RunService = game:GetService("RunService")

local toggleEnabled = false

local function onToggleChanged(isEnabled)
    toggleEnabled = isEnabled
end

AntiSection:AddToggle("Resolver", false, onToggleChanged)

RunService.Heartbeat:Connect(function()
    if toggleEnabled then
        pcall(function()
            for _, player in pairs(game.Players:GetChildren()) do
                if player.Name ~= game.Players.LocalPlayer.Name and player.Character then
                    local hrp = player.Character:FindFirstChild("HumanoidRootPart")
                    if hrp then
                        hrp.Velocity = Vector3.new(hrp.Velocity.X, 0, hrp.Velocity.Z)    
                        hrp.AssemblyLinearVelocity = Vector3.new(hrp.Velocity.X, 0, hrp.Velocity.Z)   
                    end
                end
            end
        end)
    end
end)
--Others tab
local OthersSection = OthersTab:CreateSector("Others", "left")

OthersSection:AddButton("Discord Server", function(IhateGayPeople)
local Players = game:GetService("Players")

local function copyInviteLink()
    setclipboard("https://discord.gg/ypANamnuTf")
    Players.LocalPlayer:SendNotification({
        Title = "Link Copied",
        Text = "The Discord invite link has been copied to your clipboard!",
        Duration = 3
    })
end

copyInviteLink()
    print("button")
end)

OthersSection:AddButton("made by calgl0001", function(IhateGayPeople)
    print("button")
end)
